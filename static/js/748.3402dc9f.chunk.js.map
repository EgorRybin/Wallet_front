{"version":3,"file":"static/js/748.3402dc9f.chunk.js","mappings":"4LAGaA,EAAmBC,EAAAA,GAAAA,IAAH,2nBAYlBC,EAAAA,EAAAA,aAIAA,EAAAA,EAAAA,OAKAA,EAAAA,EAAAA,S,SCNX,EAdgB,WACd,IAAMC,GAAUC,EAAAA,EAAAA,IAAYC,EAAAA,IAE5B,OACE,UAACL,EAAD,YACE,yCACA,0BACE,uCACA,0BAAOG,EAAQG,QAAQ,UAI9B,C,qOCbYC,EAAcN,EAAAA,GAAAA,IAAH,uSAQbC,EAAAA,EAAAA,OAMAA,EAAAA,EAAAA,SAMEM,EAAgBP,EAAAA,GAAAA,IAAH,0JAUbQ,EAAeR,EAAAA,GAAAA,IAAH,wXAcdC,EAAAA,EAAAA,OAKAA,EAAAA,EAAAA,SAMEQ,EAAOT,EAAAA,GAAAA,EAAH,oF,SClDjBU,EAAAA,GAAAA,SAAiBC,EAAAA,GAAYC,EAAAA,GAE7B,I,0CAuGA,EAvGc,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aACTX,GAAUC,EAAAA,EAAAA,IAAYC,EAAAA,IAExBU,GAAgB,EAChBC,GAAgB,EAedC,EAAgBH,EAAaI,QAAO,SAAAC,GAAK,OAAmB,IAAfA,EAAMC,IAAV,IAClB,IAAzBH,EAAcI,SAChBN,GAAgB,GAIS,IADPD,EAAaI,QAAO,SAAAC,GAAK,OAAmB,IAAfA,EAAMC,IAAV,IAC7BC,QAAyC,IAAzBJ,EAAcI,SAC5CL,GAAgB,GAGlB,IAAMM,GAAU,OACX,IAAIC,IAAIN,EAAcO,KAAI,SAAAL,GAAK,OAAIA,EAAMM,SAASC,IAAnB,MAG9BC,EAAYL,EAAWE,KAAI,SAAAC,GAAQ,OACvCR,EACGC,QAAO,SAAAC,GAAK,OAAIA,EAAMM,SAASC,OAASD,CAA5B,IACZG,QAAO,SAACC,EAAOV,GACd,OAAOU,EAAQV,EAAMW,GACtB,GAAE,EALkC,IAqBnCC,EAAa,CACjBC,OAAQV,EACRW,SAAU,CACR,CACEC,MAAO,kBACPC,KAAMR,EACNS,gBAtDS,CACb,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WA6CIC,YAAa,EACbC,OAAQ,SAKd,OACE,gCACGtB,IACC,UAACT,EAAD,YACE,SAAC,KAAD,CAAU4B,KA9BC,CACjBH,OAAQ,CAAC,IACTC,SAAU,CACR,CACEC,MAAO,SACPC,KAAM,CAAC,KACPC,gBAAiB,UACjBC,YAAa,EACbC,OAAQ,YAuBN,SAAC9B,EAAD,WACE,4BACE,uCACA,0BAAOL,EAAQG,QAAQ,aAK9BS,IACC,UAACR,EAAD,YACE,SAAC,KAAD,CAAU4B,KAAMJ,KAChB,SAACvB,EAAD,WACE,4BACE,uCACA,0BAAOL,EAAQG,QAAQ,cAK7BU,IAAkBD,IAClB,SAACN,EAAD,WACE,SAACC,EAAD,8FAQT,EC5GY6B,EAAiBtC,EAAAA,GAAAA,MAAH,6KAKhBC,EAAAA,EAAAA,OAIAA,EAAAA,EAAAA,SAKEsC,EAAYvC,EAAAA,GAAAA,MAAH,wBAGTwC,EAAWxC,EAAAA,GAAAA,GAAH,4cAyBRyC,EAAYzC,EAAAA,GAAAA,MAAH,wBAGT0C,EAAW1C,EAAAA,GAAAA,GAAH,oHAKR2C,GAAe3C,EAAAA,GAAAA,GAAH,8JAWZ4C,GAAe5C,EAAAA,GAAAA,GAAH,+MAcZ6C,GAAY7C,EAAAA,GAAAA,IAAH,kEAKT8C,GAAS9C,EAAAA,GAAAA,IAAH,iKAIG,SAAC+C,GAAD,OAAYA,EAAOC,KAAnB,IAOTC,GAASjD,EAAAA,GAAAA,EAAH,kNAaNkD,GAAUlD,EAAAA,GAAAA,KAAH,iEAKPmD,GAASnD,EAAAA,GAAAA,KAAH,mEAKNoD,GAAMpD,EAAAA,GAAAA,IAAH,wBCnGVqD,GAAS,CACb,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WAyEF,GAtEmB,SAAC,GAAsB,IAApBxC,EAAmB,EAAnBA,aAEdG,EAAgBH,EAAaI,QAAO,SAAAC,GAAK,OAAmB,IAAfA,EAAMC,IAAV,IAMzCO,GAJU,OACX,IAAIJ,IAAIN,EAAcO,KAAI,SAAAL,GAAK,OAAIA,EAAMM,SAASC,IAAnB,MAGPF,KAAI,SAACC,EAAU8B,GAAX,MAAkB,CACjDC,GAAID,EACJ9B,SAAAA,EACAwB,MAAOK,GAAOC,GACdE,SAAUxC,EACPC,QAAO,SAAAC,GAAK,OAAIA,EAAMM,SAASC,OAASD,CAA5B,IACZG,QAAO,SAACC,EAAOV,GACd,OAAOU,EAAQV,EAAMW,GACtB,GAAE,GAR0B,IAW3B4B,EAAUzC,EAAcW,QAAO,SAACC,EAAOV,GAC3C,OAAOU,EAAQV,EAAMW,GACtB,GAAE,GAEG6B,EAAS7C,EACZI,QAAO,SAAAC,GAAK,OAAmB,IAAfA,EAAMC,IAAV,IACZQ,QAAO,SAACC,EAAOV,GACd,OAAOU,EAAQV,EAAMW,GACtB,GAAE,GAEL,OACE,iCACE,UAACS,EAAD,YACE,SAACC,EAAD,WACE,2BACE,SAACC,EAAD,wBACA,SAACA,EAAD,wBAGJ,SAACC,EAAD,UACGf,EAAUH,KAAI,YAAwC,IAArCgC,EAAoC,EAApCA,GAAI/B,EAAgC,EAAhCA,SAAUgC,EAAsB,EAAtBA,SAAUR,EAAY,EAAZA,MACxC,OACE,UAACN,EAAD,YACE,SAACC,GAAD,WACE,UAACE,GAAD,YACE,SAACC,GAAD,CAAQE,MAAOA,IACdxB,QAGL,SAACoB,GAAD,WACE,SAACC,GAAD,UACGW,EAASnD,QAAQ,SATTkD,EAclB,UAGL,UAACH,GAAD,YACE,UAACH,GAAD,wBACW,SAACC,GAAD,UAAUO,EAAQpD,QAAQ,SAErC,UAAC4C,GAAD,sBACS,SAACE,GAAD,UAASO,EAAOrD,QAAQ,aAKxC,E,iCC/FYsD,GAAgB3D,EAAAA,GAAAA,IAAH,qEAKb4D,IAAa5D,EAAAA,EAAAA,IAAO6D,GAAAA,GAAP7D,CAAH,6FAMV8D,IAAc9D,EAAAA,EAAAA,IAAO+D,GAAAA,GAAP/D,CAAH,glBAqBbC,EAAAA,EAAAA,OASAA,EAAAA,EAAAA,SCzCL+D,GAAa,CACjB,UACA,WACA,QACA,QACA,MACA,OACA,OACA,SACA,YACA,UACA,WACA,YAoCF,GAjCoB,SAAC,GAAsC,IAApCC,EAAmC,EAAnCA,QAASC,EAA0B,EAA1BA,KAAMC,EAAoB,EAApBA,OAAQC,EAAY,EAAZA,MACtCC,EAAW,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAClBL,GAAQ,SAAAM,GACN,OAAO,oBAAKA,GAAZ,eAAwBD,EAAO7C,KAAO6C,EAAOE,OAC9C,GACF,EAED,OACE,SAACb,GAAD,WACE,SAAC,MAAD,CAAQc,cAAe,CAAEC,MAAO,GAAIC,KAAM,IAA1C,SACG,SAAAC,GAAK,OACJ,UAAChB,GAAD,YACE,SAACE,GAAD,CAAarC,KAAK,QAAQoD,GAAG,SAASR,SAAUA,EAAUS,aAAcd,GAAWE,EAAKQ,OAAxF,SACGP,EAAO5C,KAAI,SAACmD,EAAOpB,GAAR,OACV,mBAAgBkB,MAAOlB,EAAI,EAAGyB,UAAWL,EAAzC,SAAiDV,GAAWV,IAA/CA,EADH,OAId,SAACQ,GAAD,CACErC,KAAK,OACLoD,GAAG,SACHR,SAAUA,EAHZ,SAKGD,EAAMY,UAAUzD,KAAI,SAACoD,EAAMrB,GAAP,OACnB,mBAAgBkB,MAAOG,EAAvB,SAA8BA,GAAjBrB,EADM,QAZrB,KAqBb,EC/CY2B,GAAQjF,EAAAA,GAAAA,GAAH,kTASPC,EAAAA,EAAAA,OAKAA,EAAAA,EAAAA,SAMEiF,GAAqBlF,EAAAA,GAAAA,IAAH,+HACpBC,EAAAA,EAAAA,OAKAA,EAAAA,EAAAA,SAcEqC,IATUtC,EAAAA,GAAAA,IAAH,mEACTC,EAAAA,EAAAA,QAKmBD,EAAAA,GAAAA,IAAH,wBAGGA,EAAAA,GAAAA,IAAH,uNAKhBC,EAAAA,EAAAA,OAKAA,EAAAA,EAAAA,UCPX,GAlCkB,WAChB,OAAwBkF,EAAAA,EAAAA,WAAS,iBAAO,CAAET,OAAQ,IAAIU,MAAOC,WAAa,EAAIV,MAAM,IAAIS,MAAOE,cAA9D,IAAjC,eAAOpB,EAAP,KAAaD,EAAb,KAEMsB,GAAWC,EAAAA,EAAAA,MAETb,EAAgBT,EAAhBS,KAAMD,EAAUR,EAAVQ,OAEde,EAAAA,EAAAA,YAAU,WACNF,GAASG,EAAAA,EAAAA,IAAe,CAAEf,KAAMgB,OAAOhB,GAAOD,MAAOiB,OAAOjB,KAC/D,GAAE,CAACa,EAAUb,EAAOC,IAErB,IAAM9D,GAAeV,EAAAA,EAAAA,IAAYyF,EAAAA,IAE3BC,GAAU1F,EAAAA,EAAAA,IAAY2F,EAAAA,IAEtB1B,EAAQ2B,OAAOC,KAAKH,GACpBI,EAAWF,OAAOG,OAAOL,GAEzB1B,EAASC,EAAM+B,SAASxB,GAAQkB,EAAQlB,GAAQsB,EAASA,EAAS7E,OAAS,GAEjF,OACE,UAAC8D,GAAD,YACE,4BACE,SAACD,GAAD,0BACA,SAAC,EAAD,CAAOpE,aAAcA,QAEvB,UAAC,GAAD,YACE,SAAC,GAAD,CAAaoD,QAASA,EAASC,KAAMA,EAAME,MAAOA,EAAOD,OAAQA,KACjE,SAAC,GAAD,CAAYtD,aAAcA,SAIjC,E,4CCXD,GAtBuB,WACrB,IAAMuF,GAAWC,EAAAA,EAAAA,eAAc,CAAEC,SAAU,MAE3C,OACE,SAAC,MAAD,WACE,UAAC,KAAD,YACA,SAACC,EAAA,EAAD,KACA,UAAC,MAAD,YACE,UAAC,MAAD,YACE,UAAC,MAAD,YACE,SAACC,EAAA,EAAD,CAAYC,QAAQ,eACnBL,IAAY,SAACM,GAAA,EAAD,OAEdN,IAAY,SAACO,GAAA,EAAD,QAEf,SAAC,GAAD,WAKP,C,wGC/BM,IAAMf,EAAe,SAAC,GAAD,SAAG/E,aAAgC+F,UAAU/F,YAA7C,EACfiF,EAAa,SAAC,GAAD,SAAGjF,aAAgC+F,UAAUf,OAA7C,EACbgB,EAAkB,SAAAC,GAAK,OAAIA,EAAMjG,aAAaA,YAAvB,C","sources":["components/Balance/Balance.styled.js","components/Balance/Balance.jsx","components/Statistic/Chart/Chart.styled.js","components/Statistic/Chart/Chart.jsx","components/Statistic/DiagramTab/DiagramTab.styled.js","components/Statistic/DiagramTab/DiagramTab.jsx","components/Statistic/DiagramForm/DiagramForm.styled.js","components/Statistic/DiagramForm/DiagramForm.jsx","components/Statistic/Statistic.styled.js","components/Statistic/Statistic.jsx","pages/DashboardPage/StatisticsPage/StatisticsPage.jsx","redux/transactions/trans-selectors.js"],"sourcesContent":["import styled from \"styled-components\";\nimport { device } from \"styles/Media.variables\";\n\nexport const BalanceContainer = styled.div`\n  height: 80px;\n  min-width: 280px;\n  margin-left: auto;\n  margin-right: auto;\n  padding-top: 8px;\n  padding-left: 32px;\n  padding-right: 73px;\n  padding-bottom: 12px;\n  background-color: #ffffff;\n  border-radius: 30px;\n\n  @media ${device.tabletBefore} {\n    margin-top: 12px;\n  }\n\n  @media ${device.tablet} {\n    min-width: 336px;\n    margin-left: 0;\n    margin-right: 0;\n  }\n  @media ${device.desktop} {\n    margin-top: 32px;\n    margin-bottom: 32px;\n    min-width: 395px;\n  }\n\n  & p:first-child {\n    font-size: 12px;\n    color: #a6a6a6;\n  }\n\n  & p:last-child {\n    font-family: Poppins, Circe;\n    font-size: 30px;\n  }\n`;\n","import { useSelector } from \"react-redux\";\nimport { getBalance } from \"redux/auth/auth-selectors\";\nimport { BalanceContainer } from \"./Balance.styled\";\n\nconst Balance = () => {\n  const balance = useSelector(getBalance);\n\n  return (\n    <BalanceContainer>\n      <p>YOUR BALANCE</p>\n      <p>\n        <span>&#8372; </span>\n        <span>{balance.toFixed(2)}</span>\n      </p>\n    </BalanceContainer>\n  );\n};\n\nexport default Balance;\n","import styled from \"styled-components\";\nimport { device } from \"styles/Media.variables\";\n\nexport const StyledChart = styled.div`\n  position: relative;\n  width: 280px;\n  height: 280px;\n  margin-right: auto;\n  margin-left: auto;\n  margin-bottom: 32px;\n\n  @media ${device.tablet} {\n    width: 336px;\n    height: 336px;\n    margin-left: 0;\n  }\n\n  @media ${device.desktop} {\n    width: 288px;\n    height: 288px;\n  }\n`;\n\nexport const StyledBalance = styled.div`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n\n  font-weight: 700;\n  font-size: 18px;\n`;\n\nexport const Notification = styled.div`\n  margin-left: auto;\n  margin-right: auto;\n  margin-bottom: 20px;\n\n  width: 280px;\n  height: 280px;\n\n  border: 1px solid grey;\n  border-radius: 45px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  @media ${device.tablet} {\n    width: 336px;\n    height: 336px;\n  }\n\n  @media ${device.desktop} {\n    width: 288px;\n    height: 288px;\n  }\n`;\n\nexport const Text = styled.p`\n  width: 250px;\n  text-align: center;\n  font-size: 18px;\n`;","import { Doughnut } from 'react-chartjs-2';\nimport { Chart as ChartJS, ArcElement, Tooltip } from 'chart.js';\nimport { useSelector } from 'react-redux';\n\nimport { getBalance } from 'redux/auth/auth-selectors';\n\nimport { StyledChart, StyledBalance, Notification, Text } from './Chart.styled';\n\nChartJS.register(ArcElement, Tooltip);\n\nconst Chart = ({ transactions }) => {\n  const balance = useSelector(getBalance);\n\n  let isExpensTrans = false;\n  let isIncomeTrans = false;\n\n  const colors = [\n    '#FED057',\n    '#FFD8D0',\n    '#FD9498',\n    '#C5BAFF',\n    '#6E78E8',\n    '#4A56E2',\n    '#81E1FF',\n    '#24CCA7',\n    '#00AD84',\n    '#E1E384',\n  ];\n\n  const expensesTrans = transactions.filter(trans => trans.type === false);\n  if (expensesTrans.length !== 0) {\n    isExpensTrans = true;\n  }\n\n  const incomeTrans = transactions.filter(trans => trans.type === true);\n  if (incomeTrans.length !== 0 && expensesTrans.length === 0) {\n    isIncomeTrans = true;\n  }\n\n  const categories = [\n    ...new Set(expensesTrans.map(trans => trans.category.name)),\n  ];\n\n  const totalSums = categories.map(category =>\n    expensesTrans\n      .filter(trans => trans.category.name === category)\n      .reduce((total, trans) => {\n        return total + trans.sum;\n      }, 0),\n  );\n\n  const dataIncome = {\n    labels: [''],\n    datasets: [\n      {\n        label: 'Income',\n        data: [100],\n        backgroundColor: '#d0d0d0',\n        borderWidth: 0,\n        cutout: '85%',\n      },\n    ],\n  };\n\n  const dataExpens = {\n    labels: categories,\n    datasets: [\n      {\n        label: '% of Categories',\n        data: totalSums,\n        backgroundColor: colors,\n        borderWidth: 0,\n        cutout: '70%',\n      },\n    ],\n  };\n\n  return (\n    <>\n      {isIncomeTrans && (\n        <StyledChart>\n          <Doughnut data={dataIncome} />\n          <StyledBalance>\n            <div>\n              <span>&#8372; </span>\n              <span>{balance.toFixed(2)}</span>\n            </div>\n          </StyledBalance>\n        </StyledChart>\n      )}\n      {isExpensTrans && (\n        <StyledChart>\n          <Doughnut data={dataExpens} />\n          <StyledBalance>\n            <div>\n              <span>&#8372; </span>\n              <span>{balance.toFixed(2)}</span>\n            </div>\n          </StyledBalance>\n        </StyledChart>\n      )}\n      {!isIncomeTrans && !isExpensTrans && (\n        <Notification>\n          <Text>\n            You have no transactions in selected date yet. Please, choose\n            another date.\n          </Text>\n        </Notification>\n      )}\n    </>\n  );\n};\n\nexport default Chart;\n","import styled from 'styled-components';\nimport { device } from 'styles/Media.variables';\n\nexport const TableContainer = styled.table`\n  min-width: 280px;\n  margin-left: auto;\n  margin-right: auto;\n\n  @media ${device.tablet} {\n    width: 336px;\n  }\n\n  @media ${device.desktop} {\n    width: 395px;\n  }\n`;\n\nexport const TableHead = styled.thead`\n`;\n\nexport const Category = styled.th`\n  padding-top: 16px;\n  padding-bottom: 15px;\n  padding-right: 20px;\n  padding-left: 20px;\n\n  background-color: #ffffff;\n\n  font-weight: 700;\n  font-size: 18px;\n  line-height: 27px;\n\n  &:first-child {\n    text-align: start;\n    border-top-left-radius: 30px;\n    border-bottom-left-radius: 30px;\n  }\n\n  &:last-child {\n    text-align: end;\n    border-top-right-radius: 30px;\n    border-bottom-right-radius: 30px;\n  }\n`;\n\nexport const TableBody = styled.tbody`\n`;\n\nexport const TableRow = styled.tr`\n  border-bottom: 1px solid #DCDCDF;\n  box-shadow: 0px 1px 0px rgba(255, 255, 255, 0.6);  \n`;\n\nexport const OperationCat = styled.td`\n  padding: 20px;\n\n  font-weight: 400;\n  font-size: 16px;\n  line-height: 24px;\n\n  text-align: start;\n  vertical-align: middle;\n`;\n\nexport const OperationSum = styled.td`\n  padding: 20px;\n\n  font-weight: 400;\n  font-size: 16px;\n  line-height: 24px;\n\n  vertical-align: middle;\n  \n  display: flex;\n  align-items: center;\n  justify-content: end;\n`;\n\nexport const CellInner = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nexport const Square = styled.div`\n  width: 24px;\n  height: 24px;\n  border-radius: 2px;\n  background-color: ${(params) => params.color};\n  \n  margin-right: 16px;\n\n  display: inline-block;\n`;\n\nexport const Totals = styled.p`\n  font-weight: 700;\n  font-size: 16px;\n  line-height: 24px;\n\n  margin-top: 15px;\n  margin-left: 20px;\n  margin-right: 20px;\n\n  display: flex;\n  justify-content: space-between;\n`;\n\nexport const Expense = styled.span`\n  text-align: right;\n  color: #FF6596;\n`;\n\nexport const Income = styled.span`\n  text-align: right;\n  color: #24CCA7;  \n`;\n\nexport const Sum = styled.div`\n`;\n","import {\n  TableContainer,\n  TableHead,\n  Category,\n  TableBody,\n  TableRow,\n  OperationCat,\n  OperationSum,\n  Square,\n  Totals,\n  Expense,\n  Income,\n  CellInner,\n  Sum,\n} from './DiagramTab.styled';\n\n// import styles from './DiagramTab.styled';\n\nconst colors = [\n  '#FED057',\n  '#FFD8D0',\n  '#FD9498',\n  '#C5BAFF',\n  '#6E78E8',\n  '#4A56E2',\n  '#81E1FF',\n  '#24CCA7',\n  '#00AD84',\n  '#E1E384',\n];\n\nconst DiagramTab = ({ transactions }) => {\n\n  const expensesTrans = transactions.filter(trans => trans.type === false);\n\n  const categories = [\n    ...new Set(expensesTrans.map(trans => trans.category.name)),\n  ];\n\n  const totalSums = categories.map((category, i) => ({\n    id: i,\n    category,\n    color: colors[i],\n    totalSum: expensesTrans\n      .filter(trans => trans.category.name === category)\n      .reduce((total, trans) => {\n        return total + trans.sum;\n      }, 0),\n  }));\n\n  const expense = expensesTrans.reduce((total, trans) => {\n    return total + trans.sum;\n  }, 0);\n\n  const income = transactions\n    .filter(trans => trans.type === true)\n    .reduce((total, trans) => {\n      return total + trans.sum;\n    }, 0);\n\n  return (\n    <>\n      <TableContainer>\n        <TableHead>\n          <tr>\n            <Category>Category</Category>\n            <Category>Sum</Category>\n          </tr>\n        </TableHead>\n        <TableBody>\n          {totalSums.map(({ id, category, totalSum, color }) => {\n            return (\n              <TableRow key={id}>\n                <OperationCat>\n                  <CellInner>\n                    <Square color={color} />\n                    {category}\n                  </CellInner>\n                </OperationCat>\n                <OperationSum>\n                  <CellInner>\n                    {totalSum.toFixed(2)}\n                  </CellInner>\n                </OperationSum>\n              </TableRow>\n            );\n          })}\n        </TableBody>\n      </TableContainer>\n      <Sum>\n        <Totals>\n          Expenses:<Expense>{expense.toFixed(2)}</Expense>\n        </Totals>\n        <Totals>\n          Income:<Income>{income.toFixed(2)}</Income>\n        </Totals>\n      </Sum>\n    </>\n  );\n};\n\nexport default DiagramTab;","import styled from \"styled-components\";\nimport { device } from \"styles/Media.variables\";\nimport { Form, Field } from 'formik';\n\nexport const FormContainer = styled.div`\n  margin-right: auto;\n  margin-left: auto;\n`;\n\nexport const StyledForm = styled(Form)`\n  margin-right: auto;\n  margin-left: auto;\n  margin-bottom: 20px;\n`;\n\nexport const StyledField = styled(Field)`\n  font-family: 'Circe';\n  font-size: 16px;\n  line-height: 24px;\n\n  background-color: transparent;\n  border: 1px solid #000000;\n  border-radius: 30px;\n\n  padding-top: 12px;\n  padding-right: 20px;\n  padding-bottom: 14px;\n  padding-left: 20px;\n\n  width: 280px; \n  height: 50px;\n\n  &:first-child {\n    margin-bottom: 20px;\n  }\n\n  @media ${device.tablet} {\n    width: 160px; \n\n    &:first-child {\n      margin-right: 16px;\n      margin-bottom: 0px;\n    }\n  }\n\n  @media ${device.desktop} {\n    width: 182px; \n\n    &:first-child {\n      margin-right: 31px;\n    }\n  }\n`;","import { Formik } from 'formik';\n\nimport { FormContainer, StyledForm, StyledField } from './DiagramForm.styled';\n\nconst monthNames = [\n  'January',\n  'February',\n  'March',\n  'April',\n  'May',\n  'June',\n  'July',\n  'August',\n  'September',\n  'October',\n  'November',\n  'December',\n];\n\nconst DiagramForm = ({ setDate, date, months, years }) => {\n  const onChange = ({ target }) => {\n    setDate(prevState => {\n      return { ...prevState, [target.name]: target.value };\n    });\n  };\n\n  return (\n    <FormContainer>\n      <Formik initialValues={{ month: '', year: '' }}>\n        {props => (\n          <StyledForm>\n            <StyledField name=\"month\" as=\"select\" onChange={onChange} defaultValue={monthNames[date.month]}>\n              {months.map((month, i) => (\n                <option key={i} value={i + 1} disabled={!month}>{monthNames[i]}</option>\n              ))}\n            </StyledField>\n            <StyledField\n              name=\"year\"\n              as=\"select\"\n              onChange={onChange}\n            >\n              {years.reverse().map((year, i) => (\n                <option key={i} value={year}>{year}</option>\n              ))}\n            </StyledField>\n          </StyledForm>\n        )}\n      </Formik>\n    </FormContainer>\n  );\n};\n\nexport default DiagramForm;\n","import styled from \"styled-components\";\nimport { device } from \"styles/Media.variables\";\n\nexport const Title = styled.h1`\n  font-family: \"Poppins\";\n  font-weight: 400;\n  font-size: 30px;\n  line-height: 45px;\n\n  margin-top: 40px; \n  margin-bottom: 8px; \n\n  @media ${device.tablet} {\n    margin-top: 20px; \n    margin-bottom: 20px; \n  }\n\n  @media ${device.desktop} {\n    margin-top: 32px; \n    margin-left: 20px;\n  }\n`;\n\nexport const StatisticContainer = styled.div`\n  @media ${device.tablet} {\n    display: flex;\n    gap: 32px;\n  }\n\n  @media ${device.desktop} {\n    margin-left: 70px;\n  }\n`;\n\nexport const Diagram = styled.div`\n  @media ${device.tablet} {\n    margin-top: 40px;\n  }\n`;\n\nexport const ChartContainer = styled.div`\n`;\n\nexport const TableContainer = styled.div`\n  margin-right: auto;\n  margin-left: auto;\n  width: 280px;\n\n  @media ${device.tablet} {\n    width: 336px;\n    margin-top: 40px;\n  }\n\n  @media ${device.desktop} {\n    width: 395px;\n    margin-top: 97px;\n  }\n`;","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\n\nimport { getStatistic, getDateArr } from 'redux/transactions/trans-selectors';\nimport { fetchStatistic } from 'redux/transactions/trans-operations';\n\nimport Chart from 'components/Statistic/Chart/Chart';\nimport DiagramTab from 'components/Statistic/DiagramTab/DiagramTab';\nimport DiagramForm from './DiagramForm/DiagramForm';\nimport { Title, StatisticContainer, TableContainer } from './Statistic.styled';\n\nconst Statistic = () => {\n  const [date, setDate] = useState(() => ({ month: (new Date().getMonth() + 1), year: new Date().getFullYear() }));\n\n  const dispatch = useDispatch();\n\n  const { year, month } = date;\n\n  useEffect(() => {\n      dispatch(fetchStatistic({ year: Number(year), month: Number(month) }));\n  }, [dispatch, month, year]);\n\n  const transactions = useSelector(getStatistic);\n\n  const dateArr = useSelector(getDateArr);\n\n  const years = Object.keys(dateArr);\n  const monthArr = Object.values(dateArr);\n\n  const months = years.includes(year) ? dateArr[year] : monthArr[monthArr.length - 1];\n\n  return (\n    <StatisticContainer>\n      <div>\n        <Title>Statistics</Title>\n        <Chart transactions={transactions} />\n      </div>\n      <TableContainer>\n        <DiagramForm setDate={setDate} date={date} years={years} months={months}/>\n        <DiagramTab transactions={transactions} />\n      </TableContainer>\n    </StatisticContainer>\n  );\n};\n\nexport default Statistic;\n","import { useMediaQuery } from 'react-responsive';\n\nimport Header from 'components/Header/Header';\nimport Navigation from 'components/Navigation/Navigation';\nimport Statistic from 'components/Statistic/Statistic';\nimport Balance from 'components/Balance/Balance';\nimport Currency from 'components/Currency/Currency';\n\nimport { Container } from 'styles/Shared.styled';\nimport { BackgroundContainer, BlurContainer, Flex, Wrap } from '../DashboardPage.styled';\n\nconst StatisticsPage = () => {\n  const isTablet = useMediaQuery({ minWidth: 768 });\n\n  return (\n    <BackgroundContainer>\n      <BlurContainer>\n      <Header />\n      <Container>\n        <Flex>\n          <Wrap>\n            <Navigation current=\"statistics\" />\n            {isTablet && <Balance />}\n          </Wrap>\n          {isTablet && <Currency />}\n        </Flex>\n        <Statistic />\n      </Container>\n      </BlurContainer>\n    </BackgroundContainer>\n  );\n};\n\nexport default StatisticsPage;\n","export const getStatistic = ({ transactions }) => transactions.statistic.transactions;\nexport const getDateArr = ({ transactions }) => transactions.statistic.dateArr;\nexport const getTransactions = store => store.transactions.transactions;\n"],"names":["BalanceContainer","styled","device","balance","useSelector","getBalance","toFixed","StyledChart","StyledBalance","Notification","Text","ChartJS","ArcElement","Tooltip","transactions","isExpensTrans","isIncomeTrans","expensesTrans","filter","trans","type","length","categories","Set","map","category","name","totalSums","reduce","total","sum","dataExpens","labels","datasets","label","data","backgroundColor","borderWidth","cutout","TableContainer","TableHead","Category","TableBody","TableRow","OperationCat","OperationSum","CellInner","Square","params","color","Totals","Expense","Income","Sum","colors","i","id","totalSum","expense","income","FormContainer","StyledForm","Form","StyledField","Field","monthNames","setDate","date","months","years","onChange","target","prevState","value","initialValues","month","year","props","as","defaultValue","disabled","reverse","Title","StatisticContainer","useState","Date","getMonth","getFullYear","dispatch","useDispatch","useEffect","fetchStatistic","Number","getStatistic","dateArr","getDateArr","Object","keys","monthArr","values","includes","isTablet","useMediaQuery","minWidth","Header","Navigation","current","Balance","Currency","statistic","getTransactions","store"],"sourceRoot":""}