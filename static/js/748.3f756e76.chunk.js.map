{"version":3,"file":"static/js/748.3f756e76.chunk.js","mappings":"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","sources":["components/Statistic/Chart/Chart.styled.js","components/Statistic/Chart/Chart.jsx","components/Statistic/DiagramTab/DiagramTab.styled.js","components/Statistic/DiagramTab/DiagramTab.jsx","components/Statistic/DiagramForm/DiagramForm.styled.js","components/Statistic/DiagramForm/DiagramForm.jsx","components/Statistic/Statistic.styled.js","components/Statistic/Statistic.jsx","pages/DashboardPage/StatisticsPage/StatisticsPage.jsx","redux/transactions/trans-selectors.js"],"sourcesContent":["import styled from \"styled-components\";\nimport { device } from \"styles/Media.variables\";\n\nexport const StyledChart = styled.div`\n  position: relative;\n  width: 280px;\n  height: 280px;\n  margin-right: auto;\n  margin-left: auto;\n  margin-bottom: 32px;\n\n  @media ${device.tablet} {\n    width: 336px;\n    height: 336px;\n    margin-left: 0;\n  }\n\n  @media ${device.desktop} {\n    width: 288px;\n    height: 288px;\n  }\n`;\n\nexport const StyledBalance = styled.div`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n\n  font-family: 'Circe';\n  font-weight: 700;\n  font-size: 18px;\n  line-height: 27px;\n`;","import { Doughnut } from 'react-chartjs-2';\nimport { Chart as ChartJS, ArcElement, Tooltip } from 'chart.js';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\n\nimport { getBalance } from \"redux/auth/auth-selectors\";\nimport { getStatistic } from 'redux/transactions/trans-selectors';\nimport { statistic } from 'redux/transactions/trans-operations';\n\nimport { StyledChart, StyledBalance } from './Chart.styled';\n\nChartJS.register(ArcElement, Tooltip);\n\nconst Chart = ({date}) => {\n  const dispatch = useDispatch();\n\n  const balance = useSelector(getBalance);\n\n  const {year, month} = date;\n\n  useEffect(() => {\n    dispatch(statistic({year: Number(year), month: Number(month)}));\n  }, [dispatch, month, year]);\n\n  const colors = [\n    '#FED057',\n    '#FFD8D0',\n    '#FD9498',\n    '#C5BAFF',\n    '#6E78E8',\n    '#4A56E2',\n    '#81E1FF',\n    '#24CCA7',\n    '#00AD84',\n    '#E1E384',\n  ];\n\n  const transactions = useSelector(getStatistic);\n\n  const expensesTrans = transactions.filter(trans => trans.type === false);\n\n  const categories = [...new Set(expensesTrans.map(trans => trans.category.name))];\n\n  const totalSums = categories.map((category) => (expensesTrans\n    .filter(trans => trans.category.name === category)\n    .reduce((total, trans) => { return total + trans.sum; }, 0)));\n\n  const data = {\n    labels: categories,\n    datasets: [\n      {\n        label: '# of Categories',\n        data: totalSums,\n        backgroundColor: colors,\n        borderWidth: 0,\n        cutout: '65%',\n      },\n    ],\n  };\n\n  return (\n    <StyledChart>\n      <Doughnut data={data} />\n      <StyledBalance>\n        <div>\n          <span>&#8372; </span>\n          <span>{balance}</span>\n        </div>\n      </StyledBalance>\n    </StyledChart>\n  );\n};\n\nexport default Chart;\n\n  // const categories = [\n  //   'Main expenses',\n  //   'Products',\n  //   'Car',\n  //   'Self care',\n  //   'Child care',\n  //   'Household products',\n  //   'Education',\n  //   'Leisure',\n  //   'Other expenses',\n  //   'Entertainment',\n  // ];\n\n  // const totalSums = [100, 100, 300, 10, 5, 20, 250, 20, 100, 10];","import styled from 'styled-components';\nimport { device } from 'styles/Media.variables';\n\nexport const TableContainer = styled.table`\n  min-width: 280px;\n  margin-left: auto;\n  margin-right: auto;\n\n  @media ${device.tablet} {\n    width: 336px;\n  }\n\n  @media ${device.desktop} {\n    width: 395px;\n  }\n`;\n\nexport const TableHead = styled.thead`\n  /* margin-bottom: 15px; */\n`;\n\nexport const Category = styled.th`\n  padding-top: 16px;\n  padding-bottom: 15px;\n  padding-right: 20px;\n  padding-left: 20px;\n\n  background-color: #ffffff;\n\n  font-weight: 700;\n  font-size: 18px;\n  line-height: 27px;\n\n  &:first-child {\n    text-align: start;\n    border-top-left-radius: 30px;\n    border-bottom-left-radius: 30px;\n  }\n\n  &:last-child {\n    text-align: end;\n    border-top-right-radius: 30px;\n    border-bottom-right-radius: 30px;\n  }\n`;\n\nexport const TableBody = styled.tbody`\n  &:first-child {\n    text-align: start;\n  }\n\n  &:last-child {\n    text-align: end;\n  }\n`;\n\nexport const TableRow = styled.tr`\n  border-bottom: 1px solid #DCDCDF;\n  box-shadow: 0px 1px 0px rgba(255, 255, 255, 0.6);  \n  &:first-child {\n    text-align: start;\n  }\n\n  &:last-child {\n    text-align: end;\n  }\n`;\n\n// export const PlusSum = styled.th`\n//   color: #24cca7;\n//   align-items: center;\n// `;\n\n// export const MinusSum = styled.th`\n//   color: #ff6596;\n// `;\n\nexport const OperationCat = styled.th`\n  padding: 20px;\n\n  font-weight: 400;\n  font-size: 16px;\n  line-height: 18px;\n\n  &:first-child {\n    text-align: start;\n  }\n`;\n\nexport const OperationSum = styled.th`\npadding: 20px;\n\nfont-weight: 400;\nfont-size: 16px;\nline-height: 18px;\n`;\n\nexport const Square = styled.div`\n  width: 24px;\n  height: 24px;\n  /* background-color: black; */\n\n  display: inline-block;\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\n\nimport { getStatistic } from 'redux/transactions/trans-selectors';\nimport { statistic } from 'redux/transactions/trans-operations';\n\nimport { TableContainer, TableHead, Category, TableBody, TableRow, OperationCat, OperationSum, Square } from './DiagramTab.styled';\n\nconst colors = [\n  '#FED057',\n  '#FFD8D0',\n  '#FD9498',\n  '#C5BAFF',\n  '#6E78E8',\n  '#4A56E2',\n  '#81E1FF',\n  '#24CCA7',\n  '#00AD84',\n  '#E1E384',\n];\n\nconst DiagramTab = ({ date }) => {\n  const dispatch = useDispatch();\n\n  const { year, month } = date;\n\n  useEffect(() => {\n    dispatch(statistic({ year: Number(year), month: Number(month) }));\n  }, [dispatch, month, year]);\n\n  const transactions = useSelector(getStatistic);\n\n  const expensesTrans = transactions.filter(trans => trans.type === false);\n\n  const categories = [\n    ...new Set(expensesTrans.map(trans => trans.category.name)),\n  ];\n\n  const totalSums = categories.map((category, i) => ({\n    id: i,\n    category,\n    color: colors[i],\n    totalSum: expensesTrans\n      .filter(trans => trans.category.name === category)\n      .reduce((total, trans) => {\n        return total + trans.sum;\n      }, 0),\n  }));\n\n  const expense = expensesTrans.reduce((total, trans) => {\n    return total + trans.sum;\n  }, 0);\n  const income = transactions\n    .filter(trans => trans.type === true)\n    .reduce((total, trans) => {\n      return total + trans.sum;\n    }, 0);\n\n  return (<>\n    <TableContainer>\n      <TableHead>\n        <tr>\n          <Category>Category</Category>\n          <Category>Sum</Category>\n        </tr>\n      </TableHead>\n      <TableBody>\n        {totalSums.map(({ id, category, totalSum, color }) => (\n          <TableRow key={id}>\n            <OperationCat><Square style={{backgroundColor: {color}}}/>{category}</OperationCat>\n            <OperationSum>{totalSum}</OperationSum>\n          </TableRow>\n        ))}\n      </TableBody>\n    </TableContainer>\n    <div>\n      <p>Expenses:<span>{expense}</span></p>\n      <p>Income:<span>{income}</span></p>\n    </div>\n    </>\n  );\n};\n\nexport default DiagramTab;\n","import styled from \"styled-components\";\nimport { device } from \"styles/Media.variables\";\nimport { Form, Field } from 'formik';\n\nexport const FormConteiner = styled.div`\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nexport const StyledForm = styled(Form)`\n  margin-left: auto;\n  margin-right: auto;\n  margin-bottom: 20px;\n`;\n\nexport const StyledField = styled(Field)`\n  font-family: 'Circe';\n  font-size: 16px;\n  line-height: 24px;\n\n  background-color: transparent;\n  border: 1px solid #000000;\n  border-radius: 30px;\n\n  padding-top: 12px;\n  padding-right: 20px;\n  padding-bottom: 14px;\n  padding-left: 20px;\n\n  width: 280px; \n  height: 50px;\n\n  &:first-child {\n    margin-bottom: 20px;\n  }\n\n  @media ${device.tablet} {\n    width: 160px; \n    &:first-child {\n      margin-right: 16px;\n      margin-bottom: 0px;\n    }\n  }\n\n  @media ${device.desktop} {\n    width: 182px; \n    &:first-child {\n      margin-right: 32px;\n    }\n  }\n`;","import { Formik } from 'formik';\n\nimport { FormConteiner, StyledForm, StyledField } from './DiagramForm.styled';\n\nconst DiagramForm = ({setDate}) => {\n\n  const onChange = ({target}) => {\n    setDate( prevState => {\n      return {...prevState, [target.name]: target.value};\n    });\n  };\n\n  return (\n    <FormConteiner>\n      <Formik\n        initialValues={{ month: '', year: '' }}\n      >\n        {props => (\n          <StyledForm>\n            <StyledField name=\"month\" as=\"select\" onChange={onChange} >\n              <option value=\"1\">January</option>\n              <option value=\"2\">February</option>\n              <option value=\"3\">March</option>\n              <option value=\"4\">April</option>\n              <option value=\"5\">May</option>\n              <option value=\"6\">June</option>\n              <option value=\"7\">July</option>\n              <option value=\"8\">August</option>\n              <option value=\"9\">September</option>\n              <option value=\"10\">October</option>\n              <option value=\"11\">November</option>\n              <option value=\"12\">December</option>\n            </StyledField>\n            <StyledField name=\"year\" as=\"select\" onChange={onChange} defaultValue={\"2023\"}>\n              <option value=\"2018\">2018</option>\n              <option value=\"2019\">2019</option>\n              <option value=\"2020\">2020</option>\n              <option value=\"2021\">2021</option>\n              <option value=\"2022\">2022</option>\n              <option value=\"2023\">2023</option>\n            </StyledField>\n          </StyledForm>\n        )}\n      </Formik>\n    </FormConteiner>\n  );\n};\n\nexport default DiagramForm;\n","import styled from \"styled-components\";\nimport { device } from \"styles/Media.variables\";\n\nexport const Title = styled.h1`\n  font-family: \"Poppins\";\n  font-weight: 400;\n  font-size: 30px;\n  line-height: 45px;\n\n  margin-top: 40px; \n  margin-bottom: 8px; \n\n  @media ${device.tablet} {\n    margin-top: 20px; \n    margin-bottom: 20px; \n  }\n\n  @media ${device.desktop} {\n    margin-top: 32px; \n  }\n`;\n\nexport const StatisticConteiner = styled.div`\n  @media ${device.tablet} {\n    display: flex;\n    gap: 32px;\n  }\n`;\n\nexport const Diagram = styled.div`\n  @media ${device.tablet} {\n    margin-top: 40px;\n  }\n`;","import { useState } from 'react';\n\nimport Chart from 'components/Statistic/Chart/Chart';\nimport DiagramTab from 'components/Statistic/DiagramTab/DiagramTab';\nimport DiagramForm from './DiagramForm/DiagramForm';\nimport { Title, StatisticConteiner } from './Statistic.styled';\n\nconst Statistic = () => {\n  const [date, setDate] = useState({ month: 1, year: 2023 });\n\n  return (\n    <StatisticConteiner>\n      <div>\n        <Title>Statistics</Title>\n        <Chart date={date} />\n      </div>\n      <div>\n        <DiagramForm setDate={setDate} />\n        <DiagramTab date={date} />\n      </div>\n    </StatisticConteiner>\n  );\n};\n\nexport default Statistic;\n","import Header from \"components/Header/Header\";\nimport Navigation from \"components/Navigation/Navigation\";\nimport Statistic from \"components/Statistic/Statistic\";\n\nimport { Container } from \"styles/Shared.styled\";\nimport { BackgroundContainer } from \"../DashboardPage.styled\";\n\nconst StatisticsPage = () => {\n  return (\n    <BackgroundContainer>\n      <Header />\n      <Container>\n        <Navigation current=\"statistics\" />\n        <Statistic/>\n      </Container>\n    </BackgroundContainer>\n  );\n};\n\nexport default StatisticsPage;","export const getStatistic = ({ transactions }) => transactions.statistic;\nexport const getTransactions = store =>\n  store.transactions.statistic.transactions;\n"],"names":["StyledChart","styled","device","StyledBalance","ChartJS","ArcElement","Tooltip","date","dispatch","useDispatch","balance","useSelector","getBalance","year","month","useEffect","statistic","Number","expensesTrans","getStatistic","filter","trans","type","categories","Set","map","category","name","totalSums","reduce","total","sum","data","labels","datasets","label","backgroundColor","borderWidth","cutout","TableContainer","TableHead","Category","TableBody","TableRow","OperationCat","OperationSum","Square","colors","transactions","i","id","color","totalSum","expense","income","style","FormConteiner","StyledForm","Form","StyledField","Field","setDate","onChange","target","prevState","value","initialValues","props","as","defaultValue","Title","StatisticConteiner","useState","Header","Navigation","current","getTransactions","store"],"sourceRoot":""}