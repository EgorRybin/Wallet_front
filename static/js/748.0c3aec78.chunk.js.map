{"version":3,"file":"static/js/748.0c3aec78.chunk.js","mappings":"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","sources":["components/Balance/Balance.styled.js","components/Balance/Balance.jsx","components/SelectList/SelectList.styled.js","components/SelectList/SelectList.jsx","components/Statistic/Chart/Chart.styled.js","components/Statistic/Chart/Chart.jsx","components/Statistic/DiagramTab/DiagramTab.styled.js","components/Statistic/DiagramTab/DiagramTab.jsx","components/Statistic/DiagramForm/DiagramForm.styled.js","components/Statistic/DiagramForm/DiagramForm.jsx","components/Statistic/Statistic.styled.js","components/Statistic/Statistic.jsx","pages/DashboardPage/StatisticsPage/StatisticsPage.jsx","redux/transactions/trans-selectors.js"],"sourcesContent":["import styled from \"styled-components\";\nimport { device } from \"styles/Media.variables\";\n\nexport const BalanceContainer = styled.div`\n  height: 80px;\n  min-width: 280px;\n  margin-left: auto;\n  margin-right: auto;\n  padding-top: 8px;\n  padding-left: 32px;\n  padding-right: 73px;\n  padding-bottom: 12px;\n  background-color: #ffffff;\n  border-radius: 30px;\n\n  @media ${device.tabletBefore} {\n    margin-top: 12px;\n  }\n\n  @media ${device.tablet} {\n    min-width: 336px;\n    margin-left: 0;\n    margin-right: 0;\n  }\n  @media ${device.desktop} {\n    margin-top: 32px;\n    margin-bottom: 32px;\n    min-width: 395px;\n  }\n\n  & p:first-child {\n    font-size: 12px;\n    color: #a6a6a6;\n  }\n\n  & p:last-child {\n    font-family: Poppins, Circe;\n    font-size: 30px;\n  }\n`;\n","import { useSelector } from \"react-redux\";\nimport { getBalance } from \"redux/auth/auth-selectors\";\nimport { BalanceContainer } from \"./Balance.styled\";\n\nconst Balance = () => {\n  const balance = useSelector(getBalance);\n\n  return (\n    <BalanceContainer>\n      <p>YOUR BALANCE</p>\n      <p>\n        <span>&#8372; </span>\n        <span>{balance.toFixed(2)}</span>\n      </p>\n    </BalanceContainer>\n  );\n};\n\nexport default Balance;\n","import styled from 'styled-components';\nimport Select from 'react-select';\n\nimport { device } from \"styles/Media.variables\";\n\nexport const CustomSelect = styled(Select)`\n  .react-select__control {\n    cursor: pointer;\n    width: 100%;\n    border-width: 0;\n    font-family: 'Circe';\n    font-style: normal;\n    font-weight: 400;\n    font-size: 18px;\n    line-height: 27px;\n    display: flex;\n    align-items: center;\n    color: #000000;\n\n    border-bottom: 1px solid #E0E0E0;\n    border-radius: 0;\n    &:hover {\n      border: none;\n      outline: none;\n    }\n\n\n    &--is-focused {\n      border: 1px solid #24cca7;\n      outline: none;\n    }\n\n    &__inValid {\n      border: 1px solid red;\n      border-radius: 0;\n    }\n    &__inValid .react-select__placeholder{\n      color: red;\n    }\n  }\n  .react-select__indicator-separator {\n    display: none;\n  }\n  .react-select__placeholder {\n    color: #bdbdbd;\n  }\n\n  .react-select__menu {\n    overflow: hidden;\n    background: rgba(255, 255, 255, 0.7);\n    box-shadow: 0px 6px 15px rgba(0, 0, 0, 0.1);\n    backdrop-filter: blur(25px);\n    border-radius: 20px;\n  }\n\n  .react-select__menu-list {\n    overflow: auto;\n    color: #000000;\n    &::-webkit-scrollbar {\n      width: 0;\n      height: 0;\n    }\n  }\n\n\n  .react-select__option {\n    cursor: pointer;\n    font-weight: 400;\n    &:hover {\n      font-weight: 700;\n      color: #ff6596;\n      background-color: #ffffff;\n    }\n  }\n  .react-select__option--is-selected {\n    background-color: rgba(30, 9, 127, 0.4);\n  }\n  .css-t3ipsp-control {\n    box-shadow: none;\n  }\n`;\n\nexport const ChartSelect = styled(Select)`\n  margin-bottom: 20px;\n\n  @media ${device.tablet} {\n    display: inline-block;\n     &:first-child {\n      margin-right: 16px;\n      margin-bottom: 0px;\n    }\n  }\n\n  @media ${device.desktop} {\n    &:first-child {\n      margin-right: 31px;\n    }\n  }\n\n.react-select__control {\n  cursor: pointer;\n  border-width: 0;\n  font-family: 'Circe';\n  font-style: normal;\n  font-weight: 400;\n  font-size: 16px;\n  line-height: 24px;\n  display: flex;\n  align-items: center;\n  color: #000000;\n\n  background-color: transparent;\n  border: 1px solid #000000;\n  border-radius: 30px;\n\n  padding-top: 8px;\n  padding-right: 20px;\n  padding-bottom: 14px;\n  padding-left: 15px;\n\n  width: 280px; \n  height: 50px;\n\n  @media ${device.tablet} {\n    width: 160px; \n  }\n\n  @media ${device.desktop} {\n    width: 182px; \n  }\n\n  &:hover {\n    border: 1px solid #4A56E2;\n  }\n\n  &:hover .react-select__indicator {\n    color: #4A56E2;\n  }\n}\n.react-select__indicator-separator {\n  display: none;\n}\n\n.react-select__menu-list {\n  border-radius: 20px;\n  overflow: hidden;\n}\n\n.react-select__menu {\n  background: rgba(255, 255, 255);\n  box-shadow: 0px 6px 15px rgba(0, 0, 0, 0.1);\n  backdrop-filter: blur(25px);\n  border-radius: 20px;\n\n  width: 280px; \n\n  @media ${device.tablet} {\n    width: 160px; \n  }\n\n  @media ${device.desktop} {\n    width: 182px; \n  }\n}\n\n.react-select__menu-list {\n  color: #000000;\n\n  &::-webkit-scrollbar {\n    width: 0;\n    height: 0;\n  }\n}\n\n.react-select__option {\n  cursor: pointer;\n  font-weight: 400;\n  height: 30px;\n  display: flex;\n  align-items: center;\n\n  /* &:hover {\n    font-weight: 700;\n    color: #ff6596;\n    background-color: #ffffff;\n  } */\n}\n\n.react-select__option--is-selected {\n    background-color: rgba(30, 9, 127, 0.4);\n  }\n  \n.react-select__indicator {\n  color: #000000;\n}\n`;\n","import { CustomSelect, ChartSelect } from './SelectList.styled';\n\nconst SelectList = ({ options, getCurrent, defaultValue, chart, onChange, type, ...another }) => {\n\n  const handleChange = selectedOption => {\n    getCurrent(selectedOption);\n  };\n\n  return (\n    <>\n      {chart ?\n      <ChartSelect\n        classNamePrefix={'react-select'}\n        options={options}\n        onChange={handleChange}\n        defaultValue={defaultValue}\n      /> :\n      <CustomSelect\n        {...another}\n        classNamePrefix={'react-select'}\n        onChange={onChange}\n        options={options}\n        placeholder=\"Select a category\"\n      />}\n    </>\n  );\n};\n\nexport default SelectList;\n","import styled from \"styled-components\";\nimport { device } from \"styles/Media.variables\";\n\nexport const StyledChart = styled.div`\n  position: relative;\n  width: 280px;\n  height: 280px;\n  margin-right: auto;\n  margin-left: auto;\n  margin-bottom: 32px;\n\n  @media ${device.tablet} {\n    width: 336px;\n    height: 336px;\n    margin-left: 0;\n  }\n\n  @media ${device.desktop} {\n    width: 288px;\n    height: 288px;\n  }\n`;\n\nexport const StyledBalance = styled.div`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n\n  font-weight: 700;\n  font-size: 18px;\n`;\n\nexport const Notification = styled.div`\n  margin-left: auto;\n  margin-right: auto;\n  margin-bottom: 20px;\n\n  width: 280px;\n  height: 280px;\n\n  border: 1px solid grey;\n  border-radius: 45px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  @media ${device.tablet} {\n    width: 336px;\n    height: 336px;\n  }\n\n  @media ${device.desktop} {\n    width: 288px;\n    height: 288px;\n  }\n`;\n\nexport const Text = styled.p`\n  width: 250px;\n  text-align: center;\n  font-size: 18px;\n`;","import { Doughnut } from 'react-chartjs-2';\nimport { Chart as ChartJS, ArcElement, Tooltip } from 'chart.js';\nimport { useSelector } from 'react-redux';\n\nimport { getBalance } from 'redux/auth/auth-selectors';\n\nimport { StyledChart, StyledBalance, Notification, Text } from './Chart.styled';\nimport { diargamColors } from '../../../styles/Variables';\n\nChartJS.register(ArcElement, Tooltip);\n\nconst Chart = ({ transactions }) => {\n  const balance = useSelector(getBalance);\n\n  let isExpensTrans = false;\n  let isIncomeTrans = false;\n\n  const expensesTrans = transactions.filter(trans => trans.type === false);\n  if (expensesTrans.length !== 0) {\n    isExpensTrans = true;\n  }\n\n  const incomeTrans = transactions.filter(trans => trans.type === true);\n  if (incomeTrans.length !== 0 && expensesTrans.length === 0) {\n    isIncomeTrans = true;\n  }\n\n  const categories = [\n    ...new Set(expensesTrans.map(trans => trans.category.name)),\n  ];\n\n  const totalSums = categories.map(category =>\n    expensesTrans\n      .filter(trans => trans.category.name === category)\n      .reduce((total, trans) => {\n        return total + trans.sum;\n      }, 0),\n  );\n\n  const dataIncome = {\n    labels: [''],\n    datasets: [\n      {\n        label: 'Income',\n        data: [100],\n        backgroundColor: '#d0d0d0',\n        borderWidth: 0,\n        cutout: '85%',\n      },\n    ],\n  };\n\n  const dataExpens = {\n    labels: categories,\n    datasets: [\n      {\n        label: '% of Categories',\n        data: totalSums,\n        backgroundColor: diargamColors,\n        borderWidth: 0,\n        cutout: '70%',\n      },\n    ],\n  };\n\n  return (\n    <>\n      {isIncomeTrans && (\n        <StyledChart>\n          <Doughnut data={dataIncome} />\n          <StyledBalance>\n            <div>\n              <span>&#8372; </span>\n              <span>{balance.toFixed(2)}</span>\n            </div>\n          </StyledBalance>\n        </StyledChart>\n      )}\n      {isExpensTrans && (\n        <StyledChart>\n          <Doughnut data={dataExpens} />\n          <StyledBalance>\n            <div>\n              <span>&#8372; </span>\n              <span>{balance.toFixed(2)}</span>\n            </div>\n          </StyledBalance>\n        </StyledChart>\n      )\n    }\n    {!isIncomeTrans && !isExpensTrans && (\n    <Notification>\n      <Text>\n        You have no transactions in selected date yet. <br/> Please add transaction or choose another date.\n      </Text>\n    </Notification>\n    )}\n    </>\n  );\n};\n\nexport default Chart;\n","import styled from 'styled-components';\nimport { device } from 'styles/Media.variables';\nimport { colorText, border, shadows } from '../../../styles/Variables';\n\nexport const TableContainer = styled.table`\n  min-width: 280px;\n  margin-left: auto;\n  margin-right: auto;\n\n  @media ${device.tablet} {\n    width: 336px;\n  }\n\n  @media ${device.desktop} {\n    width: 395px;\n  }\n`;\n\nexport const Category = styled.th`\n  padding-top: 16px;\n  padding-bottom: 15px;\n  padding-right: 20px;\n  padding-left: 20px;\n\n  background-color: ${colorText.white};\n\n  font-weight: 700;\n  font-size: 18px;\n  line-height: 27px;\n\n  &:first-child {\n    text-align: start;\n    border-top-left-radius: 30px;\n    border-bottom-left-radius: 30px;\n  }\n\n  &:last-child {\n    text-align: end;\n    border-top-right-radius: 30px;\n    border-bottom-right-radius: 30px;\n  }\n`;\n\nexport const TableRow = styled.tr`\n  border-bottom: ${border.homeTabGrey};\n  box-shadow: ${shadows.diagramTabShadow};  \n`;\n\nexport const OperationCat = styled.td`\n  padding: 20px;\n\n  font-weight: 400;\n  font-size: 16px;\n  line-height: 24px;\n\n  text-align: start;\n  vertical-align: middle;\n`;\n\nexport const OperationSum = styled.td`\n  padding: 20px;\n\n  font-weight: 400;\n  font-size: 16px;\n  line-height: 24px;\n\n  vertical-align: middle;\n  \n  display: flex;\n  align-items: center;\n  justify-content: end;\n`;\n\nexport const CellInner = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nexport const Square = styled.div`\n  width: 24px;\n  height: 24px;\n  border-radius: 2px;\n  background-color: ${(params) => params.color};\n  \n  margin-right: 16px;\n\n  display: inline-block;\n`;\n\nexport const Totals = styled.p`\n  font-weight: 700;\n  font-size: 16px;\n  line-height: 24px;\n\n  margin-top: 15px;\n  margin-left: 20px;\n  margin-right: 20px;\n\n  display: flex;\n  justify-content: space-between;\n`;\n\nexport const Expense = styled.span`\n  text-align: right;\n  color: ${colorText.red};\n`;\n\nexport const Income = styled.span`\n  text-align: right;\n  color: ${colorText.green};  \n`;","import {\n  TableContainer,\n  Category,\n  TableRow,\n  OperationCat,\n  OperationSum,\n  Square,\n  Totals,\n  Expense,\n  Income,\n  CellInner,\n} from './DiagramTab.styled';\nimport { diargamColors } from '../../../styles/Variables';\n\nconst DiagramTab = ({ transactions }) => {\n\n  const expensesTrans = transactions.filter(trans => trans.type === false);\n\n  const categories = [\n    ...new Set(expensesTrans.map(trans => trans.category.name)),\n  ];\n\n  const totalSums = categories.map((category, i) => ({\n    id: i,\n    category,\n    color: diargamColors[i],\n    totalSum: expensesTrans\n      .filter(trans => trans.category.name === category)\n      .reduce((total, trans) => {\n        return total + trans.sum;\n      }, 0),\n  }));\n\n  const expense = expensesTrans.reduce((total, trans) => {\n    return total + trans.sum;\n  }, 0);\n\n  const income = transactions\n    .filter(trans => trans.type === true)\n    .reduce((total, trans) => {\n      return total + trans.sum;\n    }, 0);\n\n  return (\n    <>\n      <TableContainer>\n        <thead>\n          <tr>\n            <Category>Category</Category>\n            <Category>Sum</Category>\n          </tr>\n        </thead>\n        <tbody>\n          {totalSums.map(({ id, category, totalSum, color }) => {\n            return (\n              <TableRow key={id}>\n                <OperationCat>\n                  <CellInner>\n                    <Square color={color} />\n                    {category}\n                  </CellInner>\n                </OperationCat>\n                <OperationSum>\n                  <CellInner>\n                    {totalSum.toFixed(2)}\n                  </CellInner>\n                </OperationSum>\n              </TableRow>\n            );\n          })}\n        </tbody>\n      </TableContainer>\n      <div>\n        <Totals>\n          Expenses:<Expense>{expense.toFixed(2)}</Expense>\n        </Totals>\n        <Totals>\n          Income:<Income>{income.toFixed(2)}</Income>\n        </Totals>\n      </div>\n    </>\n  );\n};\n\nexport default DiagramTab;","import { Form } from 'formik';\nimport styled from \"styled-components\";\n\nexport const FormContainer = styled.div`\n  margin-right: auto;\n  margin-left: auto;\n`;\n\nexport const StyledForm = styled(Form)`\n  margin-right: auto;\n  margin-left: auto;\n  margin-bottom: 20px;\n`;","import { Formik } from 'formik';\n\nimport SelectList from 'components/SelectList/SelectList';\nimport { FormContainer, StyledForm } from './DiagramForm.styled';\nimport { monthNames } from '../../../styles/Variables';\n\nconst DiagramForm = ({ setDate, date, months, years }) => {\n  \n  const optionsMonths = months.map((month, i) => ({\n    value: i + 1,\n    isDisabled: !month,\n    label: monthNames[i],\n  }));\n  const setMonth = e => {\n    setDate(prevState => {\n      return { ...prevState, month: e.value };\n    });\n  };\n\n  const optionsYears = years\n    .reverse()\n    .map(year => ({ value: year, label: year }));\n  const setYear = e => {\n    setDate(prevState => {\n      return { ...prevState, year: e.value };\n    });\n  };\n\n  return (\n    <FormContainer>\n      <Formik initialValues={{ month: '', year: '' }}>\n        {props => (\n          <StyledForm>\n            <SelectList\n              options={optionsMonths}\n              chart\n              defaultValue={{\n                label: monthNames[date.month - 1],\n                value: date.month,\n              }}\n              getCurrent={setMonth}\n            />\n            <SelectList\n              options={optionsYears}\n              chart\n              defaultValue={{\n                label: date.year,\n                value: date.year,\n              }}\n              getCurrent={setYear}\n            />\n          </StyledForm>\n        )}\n      </Formik>\n    </FormContainer>\n  );\n};\n\nexport default DiagramForm;\n","import styled from \"styled-components\";\nimport { device } from \"styles/Media.variables\";\nimport { font } from '../../styles/Variables';\n\nexport const Title = styled.h1`\n  font-family: ${font.title};\n  font-weight: 400;\n  font-size: 30px;\n  line-height: 45px;\n\n  margin-top: 40px; \n  margin-bottom: 8px; \n\n  @media ${device.tablet} {\n    margin-top: 20px; \n    margin-bottom: 20px; \n  }\n\n  @media ${device.desktop} {\n    margin-top: 32px; \n    margin-left: 20px;\n  }\n`;\n\nexport const StatisticContainer = styled.div`\n  padding-bottom: 48px;\n\n  @media ${device.tablet} {\n    display: flex;\n    gap: 32px;\n    padding-bottom: 28px;\n  }\n\n  @media ${device.desktop} {\n    margin-left: 70px;\n    padding-bottom: 44px;\n  }\n`;\n\nexport const Diagram = styled.div`\n  @media ${device.tablet} {\n    margin-top: 40px;\n  }\n`;\n\nexport const ChartContainer = styled.div`\n`;\n\nexport const TableContainer = styled.div`\n  margin-right: auto;\n  margin-left: auto;\n  width: 280px;\n\n  @media ${device.tablet} {\n    width: 336px;\n    margin-top: 40px;\n  }\n\n  @media ${device.desktop} {\n    width: 395px;\n    margin-top: 97px;\n  }\n`;","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\n\nimport { getStatistic, getDateArr } from 'redux/transactions/trans-selectors';\nimport { fetchStatistic } from 'redux/transactions/trans-operations';\n\nimport Chart from 'components/Statistic/Chart/Chart';\nimport DiagramTab from 'components/Statistic/DiagramTab/DiagramTab';\nimport DiagramForm from './DiagramForm/DiagramForm';\nimport { Title, StatisticContainer, TableContainer } from './Statistic.styled';\n\nconst Statistic = () => {\n  const [date, setDate] = useState(() => ({ month: (new Date().getMonth() + 1), year: new Date().getFullYear() }));\n\n  const dispatch = useDispatch();\n\n  const { year, month } = date;\n\n  useEffect(() => {\n      dispatch(fetchStatistic({ year: Number(year), month: Number(month) }));\n  }, [dispatch, month, year]);\n\n  const transactions = useSelector(getStatistic);\n\n  const dateArr = useSelector(getDateArr);\n\n  const years = Object.keys(dateArr || {});\n  const monthArr = Object.values(dateArr || {});\n\n  const months = years.includes(year) ? dateArr[year] : monthArr[monthArr.length - 1];\n\n  return (\n    <StatisticContainer>\n      <div>\n        <Title>Statistics</Title>\n        <Chart transactions={transactions || []} />\n      </div>\n      <TableContainer>\n        <DiagramForm setDate={setDate} date={date} years={years} months={months || []}/>\n        <DiagramTab transactions={transactions || []} />\n      </TableContainer>\n    </StatisticContainer>\n  );\n};\n\nexport default Statistic;\n","import { useMediaQuery } from 'react-responsive';\n\nimport Header from 'components/Header/Header';\nimport Navigation from 'components/Navigation/Navigation';\nimport Statistic from 'components/Statistic/Statistic';\nimport Balance from 'components/Balance/Balance';\nimport Currency from 'components/Currency/Currency';\n\nimport { Container } from 'styles/Shared.styled';\nimport { BackgroundContainer, BlurContainer, Flex, Wrap } from '../DashboardPage.styled';\n\nconst StatisticsPage = () => {\n  const isTablet = useMediaQuery({ minWidth: 768 });\n\n  return (\n    <BackgroundContainer>\n      <BlurContainer>\n      <Header />\n      <Container>\n        <Flex>\n          <Wrap>\n            <Navigation current=\"statistics\" />\n            {isTablet && <Balance />}\n          </Wrap>\n          {isTablet && <Currency />}\n        </Flex>\n        <Statistic />\n      </Container>\n      </BlurContainer>\n    </BackgroundContainer>\n  );\n};\n\nexport default StatisticsPage;\n","export const getStatistic = ({ transactions }) => transactions.statistic.transactions;\nexport const getDateArr = ({ transactions }) => transactions.statistic.dateArr;\nexport const getTransactions = ({ transactions }) => transactions.transactions;\nexport const getTransactionsError = ({ transactions }) =>\n  transactions.error?.data?.message;\n  export const getLoadingAddTransaction = ({ transactions }) =>\n    transactions.loadingAddTrans;\n"],"names":["BalanceContainer","styled","device","balance","useSelector","getBalance","toFixed","CustomSelect","Select","ChartSelect","options","getCurrent","defaultValue","chart","onChange","another","type","classNamePrefix","selectedOption","placeholder","StyledChart","StyledBalance","Notification","Text","ChartJS","ArcElement","Tooltip","transactions","isExpensTrans","isIncomeTrans","expensesTrans","filter","trans","length","categories","Set","map","category","name","totalSums","reduce","total","sum","dataExpens","labels","datasets","label","data","backgroundColor","diargamColors","borderWidth","cutout","TableContainer","Category","colorText","TableRow","border","shadows","OperationCat","OperationSum","CellInner","Square","params","color","Totals","Expense","Income","i","id","totalSum","expense","income","FormContainer","StyledForm","Form","setDate","date","months","years","optionsMonths","month","value","isDisabled","monthNames","setMonth","e","prevState","optionsYears","reverse","year","setYear","initialValues","props","SelectList","Title","font","StatisticContainer","useState","Date","getMonth","getFullYear","dispatch","useDispatch","useEffect","fetchStatistic","Number","getStatistic","dateArr","getDateArr","Object","keys","monthArr","values","includes","isTablet","useMediaQuery","minWidth","Header","Navigation","current","Balance","Currency","statistic","getTransactions","getTransactionsError","error","message","getLoadingAddTransaction","loadingAddTrans"],"sourceRoot":""}