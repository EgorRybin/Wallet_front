{"version":3,"file":"static/js/36.56741095.chunk.js","mappings":"8PAEaA,EAAUC,EAAAA,GAAAA,IAAH,0OAaPC,EAAcD,EAAAA,GAAAA,IAAH,iQ,SCTlBE,EAAYC,SAASC,cAAc,eAgCzC,EA9Bc,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,YAAaC,EAAe,EAAfA,UAC7BC,EAAAA,EAAAA,YAAU,WAET,OADAC,OAAOC,iBAAiB,UAAWC,GAC5B,WACNF,OAAOG,oBAAoB,UAAWD,EACtC,CACD,IAED,IAMMA,EAAY,SAAAE,GACF,WAAXA,EAAEC,MACLR,GAED,EAED,OAAOS,EAAAA,EAAAA,eACN,SAACf,EAAD,CAASgB,QAba,SAAAH,GAClBA,EAAEI,SAAWJ,EAAEK,eAClBZ,GAED,EASA,UACC,SAACJ,EAAD,UACCK,MAGFJ,EAED,E,uCC2ED,EArFkB,WAChB,IAAMgB,GAAWC,EAAAA,EAAAA,MACXC,GAAYC,EAAAA,EAAAA,IAAYC,EAAAA,IAExBC,EAAmBC,EAAAA,KAAaC,MAAM,CAC1CC,MAAOF,EAAAA,KAEJE,MAAM,iBACNC,SAAS,4BACZC,SAAUJ,EAAAA,KAAaG,SAAb,iCAWZ,OACE,UAAC,KAAD,YACE,UAAC,KAAD,YACE,SAAC,KAAD,WACE,SAACE,EAAA,EAAD,OAGF,SAAC,KAAD,CACEC,cAAe,CACbJ,MAAO,GACPE,SAAU,IAEZL,iBAAkBA,EAClBQ,SArBS,SAAAC,GACfd,GAASe,EAAAA,EAAAA,IAAOD,GACjB,EAaK,SAQG,gBAAGA,EAAH,EAAGA,OAAQE,EAAX,EAAWA,OAAQC,EAAnB,EAAmBA,QAASC,EAA5B,EAA4BA,aAAcC,EAA1C,EAA0CA,aAA1C,OACC,UAAC,KAAD,CAAYN,SAAUM,EAAtB,WACE,UAAC,KAAD,YACE,SAAC,KAAD,CACEC,KAAK,QACLC,KAAK,QACLC,YAAY,SACZC,MAAOT,EAAOM,KACdI,SAAUN,KAEZ,SAAC,KAAD,IACCD,EAAQT,OAASQ,EAAOR,QACvB,SAAC,KAAD,UAAYQ,EAAOR,YAGvB,UAAC,KAAD,YACE,SAAC,KAAD,CACEY,KAAK,WACLC,KAAK,WACLC,YAAY,WACZC,MAAOT,EAAOM,KACdX,UAAU,EACVe,SAAUN,KAEZ,SAAC,KAAD,KACGF,EAAON,UAAYI,EAAOJ,UAAaO,EAAQP,YAChD,SAAC,KAAD,UAAYM,EAAON,eAGvB,UAAC,KAAD,YACE,SAAC,KAAD,CAAQe,SAAO,EAACC,YAAY,OAAOL,KAAK,SAAxC,sBAGA,SAAC,KAAD,CAAYM,GAAG,UAAUC,SAAS,OAAlC,0BAjCL,OAyCJ1B,IACC,SAAC,EAAD,CAAOf,YA7DY,WACvBa,GAAS6B,EAAAA,EAAAA,KACV,EA2DK,UACE,uBAAI3B,QAKb,E,UC1GY4B,EAAWhD,EAAAA,GAAAA,IAAH,oMACXiD,EAAAA,EAAAA,WAMAA,EAAAA,EAAAA,S,iDCuCV,EAjCkB,WAChB,IAAMC,GAAaC,EAAAA,EAAAA,eAAc,CAAEC,SAAU,MAG7C,QAFuB/B,EAAAA,EAAAA,IAAYgC,EAAAA,MAI/B,UAAC,IAAD,WACGH,IACC,UAAC,IAAD,YACE,0BACE,gCACE,mBACEI,MAAM,sBACNC,OAAM,UAAKC,EAAL,gBAAuBC,EAAvB,OACNlB,KAAK,eAEP,mBACEe,MAAM,qBACNC,OAAM,UAAKG,EAAL,gBAAsBC,EAAtB,OACNpB,KAAK,eAEP,SAACS,EAAD,CAAUY,IAAKF,EAAWG,IAAI,sBAGlC,SAAC,KAAD,8BAGJ,SAAC,EAAD,MAIP,C","sources":["components/Modal/Modal.styled.js","components/Modal/Modal.jsx","components/Auth/LoginForm/LoginForm.jsx","pages/AuthPage/LoginPage/LoginPage.styled.js","pages/AuthPage/LoginPage/LoginPage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Overlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: rgba(43, 43, 43, 0.3);\n  z-index: 1200;\n`;\n\nexport const ModalWindow = styled.div`\n  width: 540px;\n  min-height: 204px;\n  border-radius: 8px;\n  background-color: #fff;\n  box-shadow: 10px 10px 20px rgba(9, 30, 63, 0.2);\n\n  @media screen and (max-width: 768px) {\n  \twidth: 280px;\n  \tmin-height: 222px;\n  }\n`;\n","import { createPortal } from 'react-dom';\nimport { useEffect } from 'react';\n\nimport { Overlay } from './Modal.styled';\nimport { ModalWindow } from './Modal.styled';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nconst Modal = ({ toogleModal, children }) => {\n\tuseEffect(() => {\n\t\twindow.addEventListener('keydown', onKeyDown);\n\t\treturn () => {\n\t\t\twindow.removeEventListener('keydown', onKeyDown);\n\t\t};\n\t});\n\n\tconst onOverlayClick = e => {\n\t\tif (e.target === e.currentTarget) {\n\t\t\ttoogleModal();\n\t\t}\n\t};\n\n\tconst onKeyDown = e => {\n\t\tif (e.code === 'Escape') {\n\t\t\ttoogleModal();\n\t\t}\n\t};\n\n\treturn createPortal(\n\t\t<Overlay onClick={onOverlayClick}>\n\t\t\t<ModalWindow>\n\t\t\t{children}\n\t\t\t</ModalWindow>\n\t\t</Overlay>,\n\t\tmodalRoot,\n\t);\n};\n\nexport default Modal;\n\n// функция переключатель для компонента\n//  в котором будет модальное окно.\n// Прокинуть ее пропсом в компонент Modal\n//               |\n//               V\n\n\t// const toogleModal = () => {\n\t// \tsetIsModal(!isModal);\n\t// };\n\n// добавить его в компонент в котором\n//  будет модальное окно\n// state для модального окна.\n//               |\n//               V\n\n// const [isModal, setIsModal] = useState(false);","import { Formik } from 'formik';\nimport * as yup from 'yup';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { signin } from 'redux/auth/auth-operations';\n\nimport Logo from 'components/Logo/Logo';\nimport Modal from 'components/Modal/Modal';\nimport { Button, StyledLink } from 'styles/Shared.styled';\nimport {\n  AuthContainer,\n  LogoWrapper,\n  FormWrapper,\n  StyledForm,\n  StyledLabel,\n  StyledField,\n  EmailLogo,\n  PasswordLogo,\n  AuthError,\n  ButtonWrapper,\n} from '../Auth.styled';\n\nimport { getAuthError } from 'redux/auth/auth-selectors';\nimport { clearAuthError } from 'redux/auth/auth-slice';\n\n\nconst LoginForm = () => {\n  const dispatch = useDispatch();\n  const authError = useSelector(getAuthError);\n\n  const validationSchema = yup.object().shape({\n    email: yup\n      .string()\n      .email('invalid email')\n      .required('Please, enter your email'),\n    password: yup.string().required(`Please, enter your password`),\n  });\n\n  const onSubmit = values => {\n    dispatch(signin(values));\n  };\n\n  const handleModalClose = () => {\n    dispatch(clearAuthError());\n  };\n\n  return (\n    <AuthContainer>\n      <FormWrapper>\n        <LogoWrapper>\n          <Logo />\n        </LogoWrapper>\n\n        <Formik\n          initialValues={{\n            email: '',\n            password: '',\n          }}\n          validationSchema={validationSchema}\n          onSubmit={onSubmit}\n        >\n          {({ values, errors, touched, handleChange, handleSubmit }) => (\n            <StyledForm onSubmit={handleSubmit}>\n              <StyledLabel>\n                <StyledField\n                  name=\"email\"\n                  type=\"email\"\n                  placeholder=\"E-mail\"\n                  value={values.name}\n                  onChange={handleChange}\n                />\n                <EmailLogo />\n                {touched.email && errors.email && (\n                  <AuthError>{errors.email}</AuthError>\n                )}\n              </StyledLabel>\n              <StyledLabel>\n                <StyledField\n                  name=\"password\"\n                  type=\"password\"\n                  placeholder=\"Password\"\n                  value={values.name}\n                  required={true}\n                  onChange={handleChange}\n                />\n                <PasswordLogo />\n                {((errors.password && values.password) || touched.password) && (\n                  <AuthError>{errors.password}</AuthError>\n                )}\n              </StyledLabel>\n              <ButtonWrapper>\n                <Button primary marginBotom=\"20px\" type=\"submit\">\n                  SIGN IN\n                </Button>\n                <StyledLink to=\"/signup\" outlined=\"true\">\n                  SIGN UP\n                </StyledLink>\n              </ButtonWrapper>\n            </StyledForm>\n          )}\n        </Formik>\n      </FormWrapper>\n      {authError && (\n        <Modal toogleModal={handleModalClose}>\n          <p>{authError}</p>\n        </Modal>\n      )}\n    </AuthContainer>\n  );\n};\n\nexport default LoginForm;\n","import styled from \"styled-components\";\nimport { device } from \"styles/Media.variables\";\n\nexport const LoginImg = styled.img`\n\t@media ${device.tabletOnly} {\n    margin-right: 40px;\n\t\twidth: 261px;\n\t\theight: 250px;\n\t}\n\n\t@media ${device.desktop} {\n\t\tmargin-bottom: 32px;\n\t\twidth: 435px;\n\t\theight: 420px;\n\t}\n`;","import { useMediaQuery } from \"react-responsive\";\nimport { useSelector } from \"react-redux\";\n\nimport LoginForm from \"components/Auth/LoginForm/LoginForm\";\nimport { Title } from \"styles/Shared.styled\";\nimport { LoginImg } from \"./LoginPage.styled\";\nimport { StyledAuthForm, AuthHero } from \"../AuthPage.styled\";\n\nimport { getFirstLoading } from \"redux/auth/auth-selectors\";\n\nimport SigninTab from \"images/auth/SigninAppTab.png\";\nimport SigninTab2x from \"images/auth/SigninAppTab@2x.png\";\nimport SigninDesk from \"images/auth/SigninAppDesk.png\";\nimport SigninDesk2x from \"images/auth/SigninAppDeskt@2x.png\";\n\n\nconst LoginPage = () => {\n  const isntMobile = useMediaQuery({ minWidth: 768 });\n  const isFirstLoading = useSelector(getFirstLoading);\n\n  return (\n    !isFirstLoading && (\n      <StyledAuthForm>\n        {isntMobile && (\n          <AuthHero>\n            <div>\n              <picture>\n                <source\n                  media=\"(min-width: 1280px)\"\n                  srcSet={`${SigninDesk} 1x, ${SigninDesk2x} 2x`}\n                  type=\"image/png\"\n                />\n                <source\n                  media=\"(min-width: 768px)\"\n                  srcSet={`${SigninTab} 1x, ${SigninTab2x} 2x`}\n                  type=\"image/png\"\n                />\n                <LoginImg src={SigninTab} alt=\"Finance App\" />\n              </picture>\n            </div>\n            <Title>Finance App</Title>\n          </AuthHero>\n        )}\n        <LoginForm />\n      </StyledAuthForm>\n    )\n  );\n};\n\nexport default LoginPage;\n"],"names":["Overlay","styled","ModalWindow","modalRoot","document","querySelector","toogleModal","children","useEffect","window","addEventListener","onKeyDown","removeEventListener","e","code","createPortal","onClick","target","currentTarget","dispatch","useDispatch","authError","useSelector","getAuthError","validationSchema","yup","shape","email","required","password","Logo","initialValues","onSubmit","values","signin","errors","touched","handleChange","handleSubmit","name","type","placeholder","value","onChange","primary","marginBotom","to","outlined","clearAuthError","LoginImg","device","isntMobile","useMediaQuery","minWidth","getFirstLoading","media","srcSet","SigninDesk","SigninDesk2x","SigninTab","SigninTab2x","src","alt"],"sourceRoot":""}